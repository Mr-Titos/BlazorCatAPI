@using System.Security.Claims;
@inherits LayoutComponentBase
@inject ThemeService ThemeService
@inject IHttpContextAccessor _httpContextAccessor

<MudThemeProvider IsDarkModeChanged="@OnThemeChanged" IsDarkMode="isDark" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout Class="fill-height">
    <MudAppBar Dense=true>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
        <MudSpacer />
        <MudToggleIconButton @bind-Toggled=isDark
                             Icon="@Icons.Material.Filled.LightMode"
                             ToggledIcon="@Icons.Material.Filled.DarkMode"/>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/Mr-Titos" Target="_blank" />
        <LoginControl></LoginControl>
    </MudAppBar>
    <MudDrawer @bind-Open="@_Open">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Adopt a Cat</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink Match="NavLinkMatch.All" Href="/">Home</MudNavLink>
            <MudNavLink Match="NavLinkMatch.Prefix" Href="/favorites">Favorites</MudNavLink>
            <MudNavLink Match="NavLinkMatch.All" Href="/about">About</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent Class="pt-16 px-16 fill-height">
        @Body
    </MudMainContent>
</MudLayout>

@code{
    private bool _Open = true;
    private ClaimsPrincipal user;
    private bool isDark = false;

    void ToggleDrawer()
    {
        _Open = !_Open;
    }


    protected override void OnInitialized()
    {
        user = _httpContextAccessor.HttpContext.User;
        var idUser = _httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier);
        if (user.Identity.IsAuthenticated)
        {
            if (!ThemeService.isSessionDarkMode.ContainsKey(idUser.Value))
                ThemeService.isSessionDarkMode.Add(idUser.Value, false);
            else
                isDark = ThemeService.isSessionDarkMode[idUser.Value];
        }
    }

    public async Task OnThemeChanged()
    {
        var idUser = _httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier);
        ThemeService.isSessionDarkMode[idUser.Value] = isDark;
    }
}