@page "/favorites"
@using System.Security.Claims;
@attribute [Authorize]

@inject CatService CatService
@inject UserService UserService
@inject UserHttpContextService UserHttpContextService
@inject NavigationManager NavigationManager

<PageTitle>Favorites</PageTitle>

<CatListComponent Cats="cats" RefreshURI="@(NavigationManager.Uri)" Minimized="true" NominalScenario="false"></CatListComponent>

@code {
    ClaimsPrincipal user;

    List<Cat> cats;

    protected override void OnInitialized()
    {
        cats = new List<Cat>();
        user = UserHttpContextService.GetUser();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            List<Favorite> favoritesCat = Task.Run<List<Favorite>>(async () => await UserService.GetFavorites(user.FindFirst(ClaimTypes.NameIdentifier).Value)).Result;
            favoritesCat.ForEach(f =>
            {
                // Without this hack, the code will turn into an infinite loop
                cats.Add(Task.Run<Cat>(async () => await CatService.GetCat(f.ImageId)).Result);
            });
            cats = cats.OrderBy(c => c.Breeds.First().name).ToList();
            this.StateHasChanged();
        }
    }
}
