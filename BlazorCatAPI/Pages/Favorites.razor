@page "/favorites"
@using System.Security.Claims;
@attribute [Authorize]

@inject CatService CatService
@inject UserService UserService
@inject UserHttpContextService UserHttpContextService
@inject NavigationManager NavigationManager

<PageTitle>Favorites</PageTitle>

@foreach (Cat cat in cats)
{
    <CatController Cat="cat" Refresh="Refresh"></CatController>
    <br />
}


@code {
    ClaimsPrincipal user;

    List<Cat> cats;

    protected async override Task OnInitializedAsync()
    {
        cats = new List<Cat>();
        user = UserHttpContextService.GetUser();
        List <Favorite> favoritesCat = await UserService.GetFavorites(user.FindFirst(ClaimTypes.NameIdentifier).Value);
        favoritesCat.ForEach(f => {
            // Without this hack, the code will turn into an infinite loop
            Task<Cat> task = Task.Run<Cat>(async () => await CatService.GetCat(f.ImageId));
            cats.Add(task.Result);
        });
    }

    private void Refresh()
    {
        NavigationManager.NavigateTo("/favorites", true);
    }
}
